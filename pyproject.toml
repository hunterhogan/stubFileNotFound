[project]
name = "stubFileNotFound"
version = "0.0.1"
description = "Crowdsourced (a crowd of 1) stub type-files for third-party Python packages."
readme = "README.md"
requires-python = ">=3.11"
license = { 'text' = "CC-BY-NC-4.0" }
authors = [{ name = "Hunter Hogan", email = "HunterHogan@pm.me" }]
keywords = []
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Typing :: Typed",
]
urls = { Donate = "https://www.patreon.com/integrated", Homepage = "https://github.com/hunterhogan/stubFileNotFound", Repository = "https://github.com/hunterhogan/stubFileNotFound.git" }
dependencies = [
  "MonkeyType",
  "hunterMakesPy",
  "libcst",
  "mypy",
  "pyright",
  "pyupgrade",
  "stub-generator",
  "stubdefaulter@git+https://github.com/JelleZijlstra/stubdefaulter.git",
  "typeshed_client",
]
optional-dependencies = { development = [
  "setuptools-scm",
], stubdefaulter = [
  "networkx",
  "odfpy",
  "pandas",
  "python_toolbox",
  "pyxlsb",
  "requests",
  "resampy",
  "scipy-stubs",
  "scipy",
  "sqlalchemy",
  "tqdm",
  "xarray",
], testing = [
  "pytest",
  "pytest-cov",
  "pytest-xdist",
] }

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.coverage]
report = { exclude_lines = [
  "if TYPE_CHECKING:",
  "if __name__ == \"__main__\":",
], ignore_errors = false }
run = { branch = true, concurrency = [
  "multiprocessing",
], data_file = "tests/coverage/.coverage", omit = [
  "stubs/*",
  "tests/*",
  "typings/*",
], parallel = true, source = [
  ".",
] }
xml = { output = "tests/coverage/coverage.xml" }

[tool.pytest.ini_options]
addopts = ["--color=auto"]
log_auto_indent = true
testpaths = ["tests"]

[tool.setuptools]
package-data = { "*" = ["py.typed"] }
packages = { find = {  } }

[tool.updateCitation]
filenameCitationDOTcff = "CITATION.cff"
pathFilenameCitationSSOT = "citations/CITATION.cff"
