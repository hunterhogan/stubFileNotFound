from _typeshed import Incomplete

class _CompilerLock:
    _lock: Incomplete
    def __init__(self) -> None: ...
    def acquire(self) -> None: ...
    def release(self) -> None: ...
    def __enter__(self) -> None: ...
    def __exit__(self, exc_val: type[BaseException] | None, exc_type: BaseException | None, traceback: types.TracebackType | None) -> None: ...
    def is_locked(self): ...
    def __call__(self, func): ...
    def _is_owned(self): ...

global_compiler_lock: Incomplete

def require_global_compiler_lock() -> None:
    """Sentry that checks the global_compiler_lock is acquired.
    """
