"""
This type stub file was generated by pyright.
"""

"""
requests.auth
~~~~~~~~~~~~~

This module contains the authentication handlers for Requests.
"""
CONTENT_TYPE_FORM_URLENCODED = ...
CONTENT_TYPE_MULTI_PART = ...
class AuthBase:
    """Base class that all auth implementations derive from"""
    def __call__(self, r):
        ...
    


class HTTPBasicAuth(AuthBase):
    """Attaches HTTP Basic Authentication to the given Request object."""
    def __init__(self, username, password) -> None:
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    
    def __call__(self, r):
        ...
    


class HTTPProxyAuth(HTTPBasicAuth):
    """Attaches HTTP Proxy Authentication to a given Request object."""
    def __call__(self, r):
        ...
    


class HTTPDigestAuth(AuthBase):
    """Attaches HTTP Digest Authentication to the given Request object."""
    def __init__(self, username, password) -> None:
        ...
    
    def init_per_thread_state(self): # -> None:
        ...
    
    def build_digest_header(self, method, url): # -> str | None:
        """
        :rtype: str
        """
        ...
    
    def handle_redirect(self, r, **kwargs): # -> None:
        """Reset num_401_calls counter on redirects."""
        ...
    
    def handle_401(self, r, **kwargs):
        """
        Takes the given response and tries digest-auth, if needed.

        :rtype: requests.Response
        """
        ...
    
    def __call__(self, r):
        ...
    
    def __eq__(self, other) -> bool:
        ...
    
    def __ne__(self, other) -> bool:
        ...
    


