"""
This type stub file was generated by pyright.
"""

__all__ = ['memoize', 'make_lookuper', 'silent_lookuper', 'cache']
class SkipMemory(Exception):
    ...


def memoize(_func=..., *, key_func=...): # -> Callable[..., Any | None] | Callable[..., Callable[..., Any | None]]:
    """@memoize(key_func=None). Makes decorated function memoize its results.

    If key_func is specified uses key_func(*func_args, **func_kwargs) as memory key.
    Otherwise uses args + tuple(sorted(kwargs.items()))

    Exposes its memory via .memory attribute.
    """
    ...

def cache(timeout, *, key_func=...): # -> Callable[..., Callable[..., Any | None]]:
    """Caches a function results for timeout seconds."""
    ...

class CacheMemory(dict):
    def __init__(self, timeout) -> None:
        ...
    
    def __setitem__(self, key, value): # -> None:
        ...
    
    def __getitem__(self, key):
        ...
    
    def expire(self): # -> None:
        ...
    
    def clear(self): # -> None:
        ...
    


make_lookuper = ...
silent_lookuper = ...
def has_arg_types(func): # -> tuple[bool, bool]:
    ...

