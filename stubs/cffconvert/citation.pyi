from typing import Any
from cffconvert.behavior_1_0_x.citation import Citation_1_0_x as Citation_1_0_x
from cffconvert.behavior_1_1_x.citation import Citation_1_1_x as Citation_1_1_x
from cffconvert.behavior_1_2_x.citation import Citation_1_2_x as Citation_1_2_x

class Citation:
    _implementations: dict[str, type[Citation_1_0_x | Citation_1_1_x | Citation_1_2_x]]
    supported_cff_versions: list[str]
    src: str | None
    cffversion: str
    _implementation: Citation_1_0_x | Citation_1_1_x | Citation_1_2_x

    def __init__(self, cffstr: str, src: str | None = None) -> None: ...

    @staticmethod
    def _get_cff_version(cffstr: str) -> str: ...

    def __getattr__(self, name: str) -> Any: ...

    def as_apalike(self) -> str: ...
    def as_bibtex(self) -> str: ...
    def as_cff(self) -> str: ...
    def as_codemeta(self) -> str: ...
    def as_endnote(self) -> str: ...
    def as_ris(self) -> str: ...
    def as_schemaorg(self) -> str: ...
    def as_zenodo(self) -> str: ...
    def validate(self, verbose: bool = True) -> None: ...
