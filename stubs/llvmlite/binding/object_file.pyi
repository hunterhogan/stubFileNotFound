from _typeshed import Incomplete
from collections.abc import Generator
from llvmlite.binding import ffi as ffi

class SectionIteratorRef(ffi.ObjectRef):
    def name(self): ...
    def is_text(self): ...
    def size(self): ...
    def address(self): ...
    def data(self): ...
    def is_end(self, object_file): ...
    def next(self) -> None: ...
    def _dispose(self) -> None: ...

class ObjectFileRef(ffi.ObjectRef):
    @classmethod
    def from_data(cls, data): ...
    @classmethod
    def from_path(cls, path): ...
    def sections(self) -> Generator[Incomplete]: ...
    def _dispose(self) -> None: ...
