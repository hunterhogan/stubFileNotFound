"""
This type stub file was generated by pyright.
"""

"""some utility functions; reinterpret-casts on ndarrays"""
__author__ = ...
__license__ = ...
__email__ = ...
def as_struct_array(*columns): # -> _Array1D[Any]:
    """pack a sequence of columns into a recarray

    Parameters
    ----------
    columns : sequence of key objects

    Returns
    -------
    data : recarray
        recarray containing the input columns as struct fields
    """
    ...

def axis_as_object(arr, axis=...): # -> ndarray[tuple[int], dtype[void]]:
    """cast the given axis of an array to a void object
    if the axis to be cast is contiguous, a view is returned, otherwise a copy is made
    this is useful for efficiently sorting by the content of an axis, for instance

    Parameters
    ----------
    arr : ndarray
        array to view as void object type
    axis : int
        axis to view as a void object type

    Returns
    -------
    ndarray
        array with the given axis viewed as a void object
    """
    ...

def object_as_axis(arr, dtype, axis=...): # -> NDArray[Any]:
    """
    cast an array of void objects to a typed axis

    Parameters
    ----------
    arr : ndarray, [ndim], void
        array of type np.void
    dtype : numpy dtype object
        the output dtype to cast the input array to
    axis : int
        position to insert the newly formed axis into

    Returns
    -------
    ndarray, [ndim+1], dtype
        output array cast to given dtype
    """
    ...

def array_as_object(arr): # -> ndarray[tuple[int], dtype[void]]:
    """
    view everything but the first axis as a void object

    Parameters
    ----------
    arr : ndarray, [keys, ...], any
        array to be cast to a sequence of objects

    Returns
    -------
    ndarray, [keys], void
        1d array of void objects
    """
    ...

def array_as_typed(arr, dtype, shape): # -> NDArray[Any]:
    """
    unwrap a void object to its original type and shape

    Parameters
    ----------
    arr : ndarray, [], void
        array of type void to be reinterpreted
    dtype : np.dtype object
        output dtype
    shape : tuple of int
        output shape

    Returns
    -------
    ndarray, [shape], dtype
        input array reinterpreted as the given shape and dtype
    """
    ...

