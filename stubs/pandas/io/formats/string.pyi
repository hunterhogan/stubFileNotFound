from _typeshed import Incomplete
from collections.abc import Iterable
from pandas.io.formats.format import DataFrameFormatter as DataFrameFormatter
from pandas.io.formats.printing import pprint_thing as pprint_thing

class StringFormatter:
    """Formatter for string representation of a dataframe."""
    fmt: Incomplete
    adj: Incomplete
    frame: Incomplete
    line_width: Incomplete
    def __init__(self, fmt: DataFrameFormatter, line_width: int | None = None) -> None: ...
    def to_string(self) -> str: ...
    def _get_strcols(self) -> list[list[str]]: ...
    def _get_string_representation(self) -> str: ...
    @property
    def _empty_info_line(self) -> str: ...
    @property
    def _need_to_wrap_around(self) -> bool: ...
    def _insert_dot_separators(self, strcols: list[list[str]]) -> list[list[str]]: ...
    @property
    def _adjusted_tr_col_num(self) -> int: ...
    def _insert_dot_separator_horizontal(self, strcols: list[list[str]], index_length: int) -> list[list[str]]: ...
    def _insert_dot_separator_vertical(self, strcols: list[list[str]], index_length: int) -> list[list[str]]: ...
    def _join_multiline(self, strcols_input: Iterable[list[str]]) -> str: ...
    def _fit_strcols_to_terminal_width(self, strcols: list[list[str]]) -> str: ...

def _binify(cols: list[int], line_width: int) -> list[int]: ...
