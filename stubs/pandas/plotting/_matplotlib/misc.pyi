from pandas.core.dtypes.missing import notna as notna
from pandas.io.formats.printing import pprint_thing as pprint_thing
from pandas.plotting._matplotlib.style import get_standard_colors as get_standard_colors
from pandas.plotting._matplotlib.tools import create_subplots as create_subplots, do_adjust_figure as do_adjust_figure, maybe_adjust_figure as maybe_adjust_figure, set_ticks_props as set_ticks_props

TYPE_CHECKING: bool
def scatter_matrix(frame: DataFrame, alpha: float = ..., figsize: tuple[float, float] | None, ax, grid: bool = ..., diagonal: str = ..., marker: str = ..., density_kwds, hist_kwds, range_padding: float = ..., **kwds): ...
def _get_marker_compat(marker): ...
def radviz(frame: DataFrame, class_column, ax: Axes | None, color, colormap, **kwds) -> Axes: ...
def andrews_curves(frame: DataFrame, class_column, ax: Axes | None, samples: int = ..., color, colormap, **kwds) -> Axes: ...
def bootstrap_plot(series: Series, fig: Figure | None, size: int = ..., samples: int = ..., **kwds) -> Figure: ...
def parallel_coordinates(frame: DataFrame, class_column, cols, ax: Axes | None, color, use_columns: bool = ..., xticks, colormap, axvlines: bool = ..., axvlines_kwds, sort_labels: bool = ..., **kwds) -> Axes: ...
def lag_plot(series: Series, lag: int = ..., ax: Axes | None, **kwds) -> Axes: ...
def autocorrelation_plot(series: Series, ax: Axes | None, **kwds) -> Axes: ...
def unpack_single_str_list(keys): ...
