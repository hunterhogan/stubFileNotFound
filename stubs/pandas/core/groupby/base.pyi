import dataclasses
from typing import ClassVar

TYPE_CHECKING: bool

class OutputKey:
    __dataclass_params__: ClassVar[dataclasses._DataclassParams] = ...
    __dataclass_fields__: ClassVar[dict] = ...
    __match_args__: ClassVar[tuple] = ...
    def __replace__(self, **changes): ...
    def __hash__(self) -> int: ...
    def __init__(self, label: Hashable, position: int) -> None: ...
    def __eq__(self, other) -> bool: ...
    def __lt__(self, other) -> bool: ...
    def __le__(self, other) -> bool: ...
    def __gt__(self, other) -> bool: ...
    def __ge__(self, other) -> bool: ...
    def __setattr__(self, name, value): ...
    def __delattr__(self, name): ...
plotting_methods: frozenset
cythonized_kernels: frozenset
reduction_kernels: frozenset
transformation_kernels: frozenset
groupby_other_methods: frozenset
transform_kernel_allowlist: frozenset
