from pandas import PeriodDtype
from pandas._libs.tslibs import Timestamp
from pandas._libs.tslibs.period import Period
from pandas.core.arrays.datetimelike import DatelikeOps, DatetimeLikeArrayMixin
from typing import Any
import numpy as np

class PeriodArray(DatetimeLikeArrayMixin, DatelikeOps):
    __array_priority__: int = ...
    def __init__(self, values: Any, freq: Any=None, dtype: Any=None, copy: bool = False) -> None: ...
    @property
    def dtype(self) -> PeriodDtype: ...
    def __array__(self, dtype: Any=None) -> np.ndarray[Any, Any]: ...
    def __arrow_array__(self, type: Any=None) -> Any: ...
    year: int = ...
    month: int = ...
    day: int = ...
    hour: int = ...
    minute: int = ...
    second: int = ...
    weekofyear: int = ...
    week: int = ...
    dayofweek: int = ...
    weekday: int = ...
    dayofyear: int = ...
    day_of_year = ...
    quarter: int = ...
    qyear: int = ...
    days_in_month: int = ...
    daysinmonth: int = ...
    @property
    def is_leap_year(self) -> bool: ...
    @property
    def start_time(self) -> Timestamp: ...
    @property
    def end_time(self) -> Timestamp: ...
    def to_timestamp(self, freq: str | None = None, how: str = 'start') -> Timestamp: ...
    def asfreq(self, freq: str | None = None, how: str = "E") -> Period: ...
    def astype(self, dtype: Any, copy: bool = True) -> Any: ...
