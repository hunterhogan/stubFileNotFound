"""
This type stub file was generated by pyright.
"""

class ObjectDB:
    def __init__(self, db, validation) -> None:
        ...
    
    def validate_files(self): # -> None:
        ...
    
    def validate_file(self, file): # -> None:
        ...
    
    def file_moved(self, file, newfile): # -> None:
        ...
    
    def get_files(self):
        ...
    
    def get_returned(self, path, key, args): # -> None:
        ...
    
    def get_pername(self, path, key, name): # -> None:
        ...
    
    def get_callinfos(self, path, key): # -> list[Any]:
        ...
    
    def add_callinfo(self, path, key, args, returned): # -> None:
        ...
    
    def add_pername(self, path, key, name, value): # -> None:
        ...
    
    def add_file_list_observer(self, observer): # -> None:
        ...
    
    def write(self): # -> None:
        ...
    
    def __str__(self) -> str:
        ...
    


class _NullScopeInfo:
    def __init__(self, error_on_write=...) -> None:
        ...
    
    def get_per_name(self, name): # -> None:
        ...
    
    def save_per_name(self, name, value): # -> None:
        ...
    
    def get_returned(self, parameters): # -> None:
        ...
    
    def get_call_infos(self): # -> list[Any]:
        ...
    
    def add_call(self, parameters, returned): # -> None:
        ...
    


class FileInfo(dict):
    def create_scope(self, key): # -> None:
        ...
    


class FileDict(dict):
    def create(self, key): # -> None:
        ...
    
    def rename(self, key, new_key): # -> None:
        ...
    


class ScopeInfo:
    def get_per_name(self, name): # -> None:
        ...
    
    def save_per_name(self, name, value): # -> None:
        ...
    
    def get_returned(self, parameters): # -> None:
        ...
    
    def get_call_infos(self): # -> None:
        ...
    
    def add_call(self, parameters, returned): # -> None:
        ...
    


class CallInfo:
    def __init__(self, args, returned) -> None:
        ...
    
    def get_parameters(self): # -> Any:
        ...
    
    def get_returned(self): # -> Any:
        ...
    


class FileListObserver:
    def added(self, path): # -> None:
        ...
    
    def removed(self, path): # -> None:
        ...
    


