"""
This type stub file was generated by pyright.
"""

import sys
import warnings

def saveit(func): # -> Callable[..., Any]:
    """A decorator that caches the return value of a function"""
    ...

cacheit = ...
def prevent_recursion(default): # -> Callable[..., Callable[..., Any]]:
    """A decorator that returns the return value of `default` in recursions"""
    ...

def ignore_exception(exception_class): # -> Callable[..., Callable[..., Any | None]]:
    """A decorator that ignores `exception_class` exceptions"""
    ...

def deprecated(message=...): # -> Callable[..., Callable[..., Any]]:
    """A decorator for deprecated functions"""
    ...

def cached(size): # -> Callable[..., Callable[..., Any]]:
    """A caching decorator based on parameter objects"""
    ...

class _Cached:
    def __init__(self, func, count) -> None:
        ...
    
    def __call__(self, *args, **kwds):
        ...
    


def resolve(str_or_obj): # -> Any | ModuleType:
    """Returns object from string"""
    ...

def guess_def_lineno(module, node):
    """Find the line number for a function or class definition.

    `node` may be either an ast.FunctionDef, ast.AsyncFunctionDef, or ast.ClassDef

    Python 3.8 simply provides this to us, but in earlier versions the ast
    node.lineno points to the first decorator rather than the actual
    definition, so we try our best to find where the definitions are.

    This is to workaround bpo-33211 (https://bugs.python.org/issue33211)
    """
    ...

