import threading
from _typeshed import Incomplete

# Not bothering with types here as lxml support is supposed to be dropped in a future version
# of defusedxml

LXML3: Incomplete
__origin__: str
tostring: Incomplete

# Should be imported from lxml.etree.ElementBase, but lxml lacks types
class _ElementBase: ...

class RestrictedElement(_ElementBase):
    blacklist: Incomplete
    def __iter__(self): ...
    def iterchildren(self, tag: Incomplete | None = None, reversed: bool = False): ...
    def iter(self, tag: Incomplete | None = None, *tags): ...
    def iterdescendants(self, tag: Incomplete | None = None, *tags): ...
    def itersiblings(self, tag: Incomplete | None = None, preceding: bool = False): ...
    def getchildren(self): ...
    def getiterator(self, tag: Incomplete | None = None): ...

class GlobalParserTLS(threading.local):
    parser_config: Incomplete
    element_class: Incomplete
    def createDefaultParser(self): ...
    def setDefaultParser(self, parser) -> None: ...
    def getDefaultParser(self): ...

getDefaultParser: Incomplete

def check_docinfo(elementtree, forbid_dtd: bool = False, forbid_entities: bool = True) -> None: ...
def parse(
    source,
    parser: Incomplete | None = None,
    base_url: Incomplete | None = None,
    forbid_dtd: bool = False,
    forbid_entities: bool = True,
): ...
def fromstring(
    text, parser: Incomplete | None = None, base_url: Incomplete | None = None, forbid_dtd: bool = False, forbid_entities: bool = True
): ...

XML = fromstring

def iterparse(*args, **kwargs) -> None: ...
