from typing import Any

"""
This type stub file was generated by pyright.
"""

from python_toolbox.freezing import Freezer

"""Defines various tools for manipulating windows."""
class WindowFreezer(Freezer):
    """Context manager for freezing the window while the suite executes."""

    def __init__(self, window: Any) -> None:
        ...

    def freeze_handler(self) -> Any: # -> None:
        ...

    def thaw_handler(self) -> Any: # -> None:
        ...



class FlagRaiser:
    """When called, raises a flag of a window and then calls some function."""

    def __init__(self, window: Any, attribute_name: Any=..., function: Any=..., delay: Any=...) -> None:
        """
        Construct the flag raiser.

        `window` is the window we're acting on. `attribute_name` is the name of
        the flag that we set to True. `function` is the function we call after
        we set the flag. Default for `function` is `window.Refresh`.

        If we get a `delay` argument, then we don't call the function
        immediately, but wait for `delay` time, specified as seconds, then call
        it. If this flag raiser will be called again while the timer's on, it
        will not cause another function calling.
        """

    def __call__(self) -> Any: # -> None:
        """Raise the flag and call the function. (With delay if we set one.)."""






