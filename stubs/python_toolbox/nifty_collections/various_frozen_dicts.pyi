"""
This type stub file was generated by pyright.
"""

import collections
from .abstract import Ordered
from .ordered_dict import OrderedDict

class _AbstractFrozenDict(collections.abc.Mapping):
    _hash = ...
    def __init__(self, *args, **kwargs) -> None:
        ...
    
    __getitem__ = ...
    __len__ = ...
    __iter__ = ...
    def copy(self, *args, **kwargs): # -> Self:
        ...
    
    def __hash__(self) -> int:
        ...
    
    __repr__ = ...
    __reduce__ = ...


class FrozenDict(_AbstractFrozenDict):
    '''
    An immutable `dict`.

    A `dict` that can't be changed. The advantage of this over `dict` is mainly
    that it's hashable, and thus can be used as a key in dicts and sets.

    In other words, `FrozenDict` is to `dict` what `frozenset` is to `set`.
    '''
    _dict_type = dict


class FrozenOrderedDict(Ordered, _AbstractFrozenDict):
    '''
    An immutable, ordered `dict`.

    A `dict` that is ordered and can't be changed. The advantage of this over
    `OrderedDict` is mainly that it's hashable, and thus can be used as a key
    in dicts and sets.
    '''
    _dict_type = OrderedDict
    def __eq__(self, other) -> bool:
        ...
    
    __hash__ = ...
    _reversed = ...
    @property
    def reversed(self): # -> Self:
        '''
        Get a version of this `FrozenOrderedDict` with key order reversed.
        '''
        ...
    


