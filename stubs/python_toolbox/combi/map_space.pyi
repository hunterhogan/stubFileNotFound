"""
This type stub file was generated by pyright.
"""

import collections
from python_toolbox import sequence_tools

infinity = ...
class MapSpace(sequence_tools.CuteSequenceMixin, collections.abc.Sequence):
    '''
    A space of a function applied to a sequence.

    This is similar to Python's builtin `map`, except that it behaves like a
    sequence rather than an iterable. (Though it's also iterable.) You can
    access any item by its index number.

    Example:

        >>> map_space = MapSpace(lambda x: x ** 2, range(7))
        >>> map_space
        MapSpace(<function <lambda> at 0x00000000030C1510>, range(0, 7))
        >>> len(map_space)
        7
        >>> map_space[3]
        9
        >>> tuple(map_space)
        (0, 1, 4, 9, 16, 25, 36)

    '''
    def __init__(self, function, sequence) -> None:
        ...
    
    length = ...
    def __repr__(self): # -> LiteralString:
        ...
    
    def __getitem__(self, i): # -> Self:
        ...
    
    def __iter__(self): # -> Generator[Any, Any, None]:
        ...
    
    _reduced = ...
    __eq__ = ...
    __hash__ = ...
    __bool__ = ...


