"""
This type stub file was generated by pyright.
"""

'''Defines various functions for working with queues.'''
def is_multiprocessing_queue(queue):
    '''Return whether `queue` is a multiprocessing queue.'''
    ...

def dump(queue): # -> list[Any]:
    '''
    Empty all pending items in a queue and return them in a list.

    Use only when no other processes/threads are reading from the queue.
    '''
    ...

def iterate(queue, block=..., limit_to_original_size=..., _prefetch_if_no_qsize=...): # -> Generator[Any, Any, None]:
    '''
    Iterate over the items in the queue.

    `limit_to_original_size=True` will limit the number of the items fetched to
    the original number of items in the queue in the beginning.
    '''
    ...

def get_item(queue, i):
    '''
    Get an item from the queue by index number without removing any items.

    Note: This was designed for `Queue.Queue`. Don't try to use this, for
    example, on `multiprocessing.Queue`.
    '''
    ...

def queue_as_list(queue): # -> list[Any]:
    '''
    Get all the items in the queue as a `list` without removing them.

    Note: This was designed for `Queue.Queue`. Don't try to use this, for
    example, on `multiprocessing.Queue`.
    '''
    ...

