"""
This type stub file was generated by pyright.
"""

'''Defines various tools related to importing.'''
def normal_import(module_name): # -> Any:
    '''
    Import a module.

    This function has several advantages over `__import__`:

     1. It avoids the weird `fromlist=['']` that you need to give `__import__`
        in order for it to return the specific module you requested instead of
        the outermost package, and

     2. It avoids a weird bug in Linux, where importing using `__import__` can
        lead to a `module.__name__` containing two consecutive dots.

    '''
    ...

def import_if_exists(module_name): # -> Any | None:
    '''
    Import module by name and return it, only if it exists.
    '''
    ...

def exists(module_name, package_name=...): # -> bool:
    '''
    Return whether a module by the name `module_name` exists.

    This seems to be the best way to carefully import a module.

    Currently implemented for top-level packages only. (i.e. no dots.)

    Supports modules imported from a zip file.
    '''
    ...

