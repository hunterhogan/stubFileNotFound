"""
This type stub file was generated by pyright.
"""

from python_toolbox import context_management
from . import original_read_write_lock

'''
See documentation of class `ReadWriteLock` defined in this module.
'''
__all__ = ['ReadWriteLock']
class ContextManager(context_management.ContextManager):
    def __init__(self, lock, acquire_func) -> None:
        ...
    
    def __enter__(self): # -> Any:
        ...
    
    def __exit__(self, exc_type, exc_value, exc_traceback): # -> None:
        ...
    


class ReadWriteLock(original_read_write_lock.ReadWriteLock):
    '''
    A ReadWriteLock subclassed from a different ReadWriteLock class defined
    in the module original_read_write_lock.py, (See the documentation of the
    original class for more details.)

    This subclass adds two context managers, one for reading and one for
    writing.

    Usage:

        read_write_lock = ReadWriteLock()
        with read_write_lock.read:
            pass # perform read operations here
        with read_write_lock.write:
            pass # perform write operations here

    '''
    def __init__(self, *args, **kwargs) -> None:
        ...
    


