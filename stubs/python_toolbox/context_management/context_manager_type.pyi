"""
This type stub file was generated by pyright.
"""

import abc
from .context_manager_type_type import ContextManagerTypeType

class ContextManagerType(abc.ABCMeta, metaclass=ContextManagerTypeType):
    '''
    Metaclass for `ContextManager`.

    Use this directly as a decorator to create a `ContextManager` from a
    generator function.

    Example:

        @ContextManagerType
        def MyContextManager():
            # preparation
            try:
                yield
            finally:
                pass # cleanup

    The resulting context manager could be called either with the `with`
    keyword or by using it as a decorator to a function.

    For more details, see documentation of the containing module,
    `python_toolbox.context_manager`.
    '''
    def __new__(mcls, name, bases, namespace): # -> Self:
        '''
        Create either `ContextManager` itself or a subclass of it.

        For subclasses of `ContextManager`, if a `manage_context` method is
        available, we will use `__enter__` and `__exit__` that will use the
        generator returned by `manage_context`.
        '''
        ...
    


