"""
This type stub file was generated by pyright.
"""

import socket

"""
envelopes.conn
==============

This module contains SMTP connection wrapper.
"""
TimeoutException = socket.timeout
__all__ = ['SMTP', 'GMailSMTP', 'SendGridSMTP', 'MailcatcherSMTP', 'TimeoutException']
class SMTP:
    """Wrapper around :py:class:`smtplib.SMTP` class."""
    def __init__(self, host=..., port=..., login=..., password=..., tls=..., timeout=...) -> None:
        ...
    
    @property
    def is_connected(self): # -> bool:
        """Returns *True* if the SMTP connection is initialized and
        connected. Otherwise returns *False*"""
        ...
    
    def send(self, envelope): # -> _SendErrs:
        """Sends an *envelope*."""
        ...
    


class GMailSMTP(SMTP):
    """Subclass of :py:class:`SMTP` preconfigured for GMail SMTP."""
    GMAIL_SMTP_HOST = ...
    GMAIL_SMTP_TLS = ...
    def __init__(self, login=..., password=...) -> None:
        ...
    


class SendGridSMTP(SMTP):
    """Subclass of :py:class:`SMTP` preconfigured for SendGrid SMTP."""
    SENDGRID_SMTP_HOST = ...
    SENDGRID_SMTP_PORT = ...
    SENDGRID_SMTP_TLS = ...
    def __init__(self, login=..., password=...) -> None:
        ...
    


class MailcatcherSMTP(SMTP):
    """Subclass of :py:class:`SMTP` preconfigured for local Mailcatcher
    SMTP."""
    MAILCATCHER_SMTP_HOST = ...
    def __init__(self, port=...) -> None:
        ...
    


