"""
This type stub file was generated by pyright.
"""

from python_toolbox.context_management import ContextManager

'''Defines various `sys`-related tools.'''
class OutputCapturer(ContextManager):
    '''
    Context manager for catching all system output generated during suite.

    Example:

        with OutputCapturer() as output_capturer:
            print('woo!')

        assert output_capturer.output == 'woo!\n'

    The boolean arguments `stdout` and `stderr` determine, respectively,
    whether the standard-output and the standard-error streams will be
    captured.
    '''
    def __init__(self, stdout=..., stderr=...) -> None:
        ...
    
    def manage_context(self): # -> Generator[Self, Any, None]:
        '''Manage the `OutputCapturer`'s context.'''
        ...
    
    output = ...


class TempSysPathAdder(ContextManager):
    '''
    Context manager for temporarily adding paths to `sys.path`.

    Removes the path(s) after suite.

    Example:

        with TempSysPathAdder('path/to/fubar/package'):
            import fubar
            fubar.do_stuff()

    '''
    def __init__(self, addition) -> None:
        '''
        Construct the `TempSysPathAdder`.

        `addition` may be a path or a sequence of paths.
        '''
        ...
    
    def __enter__(self): # -> Self:
        ...
    
    def __exit__(self, *args, **kwargs): # -> None:
        ...
    


frozen = ...
is_pypy = ...
can_import_compiled_modules = ...
